name: CI/CD Pipeline

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov black flake8 codecov

      - name: Lint with flake8
        run: |
          flake8 agent/src ui/src --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 agent/src ui/src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Format with black
        run: |
          black agent/src ui/src --check

      - name: Run tests with coverage
        run: |
          cd agent
          pytest src/test_main.py -v --cov=src --cov-report=xml --cov-report=term-missing
          cd ../ui
          pytest src/test_ui.py -v --cov=src --cov-report=xml --cov-report=term-missing

      - name: Build and test containers
        run: |
          docker-compose down
          docker-compose build
          docker-compose up -d
          sleep 10  # Wait for services to start
          # Run integration tests
          curl -s http://localhost:8000/ | grep "Habit Wizard Agent"
          curl -s http://localhost:5001/ | grep "Habit Wizard UI"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./agent/coverage.xml,./ui/coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella
          yml: ./codecov.yml
          functionalities:
            - coverage
            - gcov
            - search
            - carryforward
            - network
            - fixes
            - comment

      - name: Check coverage changes
        if: github.event_name == 'pull_request'
        run: |
          # This step will only run on pull requests
          # Codecov will automatically comment on the PR with coverage changes
          echo "Coverage changes will be reported by Codecov"

  deploy:
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production
        run: |
          echo "Deployment would happen here"
          # Add your deployment steps here 